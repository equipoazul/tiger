bien!
FLOWGRAPH: 
[23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, ]
[<22, 23><21, 22><20, 21><19, 20><18, 19><17, 18><16, 17><15, 16><14, 15><13, 14><12, 13><11, 12><10, 11><9, 10><8, 9><7, 8><6, 7><5, 6><4, 5><3, 4><2, 3><1, 2><0, 1>]
Use:
8 -> T0 
9 -> T1 
10 -> T19 
11 -> T2 
12 -> T18 
13 -> T3 
14 -> T17 
15 -> T4 
16 -> T16 
17 -> T5 
18 -> T15 
19 -> T6 
20 -> T14 
21 -> T13 
Def:
1 -> T0 
2 -> T1 
3 -> T2 
4 -> T3 
5 -> T4 
6 -> T5 
7 -> T6 
8 -> T19 
9 -> T19 
10 -> T18 
11 -> T18 
12 -> T17 
13 -> T17 
14 -> T16 
15 -> T16 
16 -> T15 
17 -> T15 
18 -> T14 
19 -> T14 
20 -> T13 
21 -> eax 
LIVE QUE VIENE POR ARRASTRE
LIVE DEL NODO 23
LIVE DEL NODO 22
LIVE DEL NODO 21
T13
LIVE DEL NODO 20
T14
LIVE DEL NODO 19
T6
LIVE DEL NODO 18
T15
T6
LIVE DEL NODO 17
T5
T6
LIVE DEL NODO 16
T16
T5
T6
LIVE DEL NODO 15
T4
T5
T6
LIVE DEL NODO 14
T17
T4
T5
T6
LIVE DEL NODO 13
T3
T4
T5
T6
LIVE DEL NODO 12
T18
T3
T4
T5
T6
LIVE DEL NODO 11
T2
T3
T4
T5
T6
LIVE DEL NODO 10
T19
T2
T3
T4
T5
T6
LIVE DEL NODO 9
T1
T2
T3
T4
T5
T6
LIVE DEL NODO 8
T0
T1
T2
T3
T4
T5
T6
LIVE DEL NODO 7
T0
T1
T2
T3
T4
T5
LIVE DEL NODO 6
T0
T1
T2
T3
T4
LIVE DEL NODO 5
T0
T1
T2
T3
LIVE DEL NODO 4
T0
T1
T2
LIVE DEL NODO 3
T0
T1
LIVE DEL NODO 2
T0
LIVE DEL NODO 1
LIVE DEL NODO 0
=========================================
spillWorkList: 
0(T0)
1(T1)
8(T19)
9(T2)
10(T3)
11(T4)
12(T5)
13(T6)
freezeWorkList: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
7(T18)
simplifyWorkList: 
coalescedNodes: 
coloredNodes: 
spilledNodes: 
worklistMoves: 
(T0, T19)
(T13, eax)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
(T19, T18)
activeMoves: 
coalescedMoves: 
frozenMoves: 
constrainedMoves: 
Degrees: 20
19 (esi) -> 0
18 (edx) -> 0
17 (edi) -> 0
16 (ecx) -> 0
15 (ebx) -> 0
14 (eax) -> 0
13 (T6) -> 12
12 (T5) -> 11
11 (T4) -> 10
10 (T3) -> 9
9 (T2) -> 8
8 (T19) -> 6
7 (T18) -> 5
6 (T17) -> 4
5 (T16) -> 3
4 (T15) -> 2
3 (T14) -> 1
2 (T13) -> 0
1 (T1) -> 7
0 (T0) -> 6
Termine 

CODIGO: 
0	LABEL {assem = _tigermain:
 lab = _tigermain}
1	OPER {assem = movl `d0,$1
 dst = T0 , src = , _ jump = _}
2	OPER {assem = movl `d0,$2
 dst = T1 , src = , _ jump = _}
3	OPER {assem = movl `d0,$3
 dst = T2 , src = , _ jump = _}
4	OPER {assem = movl `d0,$4
 dst = T3 , src = , _ jump = _}
5	OPER {assem = movl `d0,$5
 dst = T4 , src = , _ jump = _}
6	OPER {assem = movl `d0,$6
 dst = T5 , src = , _ jump = _}
7	OPER {assem = movl `d0,$7
 dst = T6 , src = , _ jump = _}
8	MOVE {assem = movlE1 `d0,`s0
, dst =T19, src =T0}
9	OPER {assem = addl `d0,`s0
 dst = T19 , src = T1 , _ jump = _}
10	MOVE {assem = movlE1 `d0,`s0
, dst =T18, src =T19}
11	OPER {assem = addl `d0,`s0
 dst = T18 , src = T2 , _ jump = _}
12	MOVE {assem = movlE1 `d0,`s0
, dst =T17, src =T18}
13	OPER {assem = addl `d0,`s0
 dst = T17 , src = T3 , _ jump = _}
14	MOVE {assem = movlE1 `d0,`s0
, dst =T16, src =T17}
15	OPER {assem = addl `d0,`s0
 dst = T16 , src = T4 , _ jump = _}
16	MOVE {assem = movlE1 `d0,`s0
, dst =T15, src =T16}
17	OPER {assem = addl `d0,`s0
 dst = T15 , src = T5 , _ jump = _}
18	MOVE {assem = movlE1 `d0,`s0
, dst =T14, src =T15}
19	OPER {assem = addl `d0,`s0
 dst = T14 , src = T6 , _ jump = _}
20	MOVE {assem = movl `d0,`s0
, dst =T13, src =T14}
21	MOVE {assem = movl `d0,`s0
, dst =eax, src =T13}
22	OPER {assem = jmp L0
 dst = , src = , _ jump = _}
23	LABEL {assem = L0:
 lab = L0}

=========================================
METO (T13, eax) en coalescedMoves
Meto en el alias -> T13 eax
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> ~1
7 (T18) -> ~1
6 (T17) -> ~1
5 (T16) -> ~1
4 (T15) -> ~1
3 (T14) -> ~1
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
METO (T15, T14) en coalescedMoves
Meto en el alias -> T14 T15
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> ~1
7 (T18) -> ~1
6 (T17) -> ~1
5 (T16) -> ~1
4 (T15) -> ~1
3 (T14) -> 4
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
METO (T16, T15) en coalescedMoves
Meto en el alias -> T15 T16
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> ~1
7 (T18) -> ~1
6 (T17) -> ~1
5 (T16) -> ~1
4 (T15) -> 5
3 (T14) -> 4
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
METO (T17, T16) en coalescedMoves
Meto en el alias -> T16 T17
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> ~1
7 (T18) -> ~1
6 (T17) -> ~1
5 (T16) -> 6
4 (T15) -> 5
3 (T14) -> 4
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
METO (T18, T17) en coalescedMoves
Meto en el alias -> T17 T18
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> ~1
7 (T18) -> ~1
6 (T17) -> 7
5 (T16) -> 6
4 (T15) -> 5
3 (T14) -> 4
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
coalescedMoves: 
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
coalescedMoves: 
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
METO eax en simplifyWorklist (freezeMoves)
METO T18 en el stack
METO eax en el stack
PRIORITIES: (0.333333333333, T0), (0.285714285714, T1), (0.5, T19), (0.25, T2), (0.222222222222, T3), (0.2, T4), (0.181818181818, T5), (0.166666666667, T6), 
----> spilleWorkList: T0, T1, T19, T2, T3, T4, T5, T6, 
SPILLEO T6
METO T6 en el stack
METO (T0, T19) en coalescedMoves
Meto en el alias -> T19 T0
METO T1 en simplifyWorklist (decrementDegree)
METO T2 en simplifyWorklist (decrementDegree)
METO T3 en simplifyWorklist (decrementDegree)
METO T4 en simplifyWorklist (decrementDegree)
METO T5 en simplifyWorklist (decrementDegree)
Tabla de Alias: 
19 (esi) -> ~1
18 (edx) -> ~1
17 (edi) -> ~1
16 (ecx) -> ~1
15 (ebx) -> ~1
14 (eax) -> ~1
13 (T6) -> ~1
12 (T5) -> ~1
11 (T4) -> ~1
10 (T3) -> ~1
9 (T2) -> ~1
8 (T19) -> 0
7 (T18) -> ~1
6 (T17) -> 7
5 (T16) -> 6
4 (T15) -> 5
3 (T14) -> 4
2 (T13) -> 14
1 (T1) -> ~1
0 (T0) -> ~1
Termine 
METO T0 en simplifyWorklist (addWorklist)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
8(T19)
coalescedMoves: 
(T0, T19)
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
METO T0 en el stack
METO T1 en el stack
METO T2 en el stack
METO T3 en el stack
METO T4 en el stack
METO T5 en el stack
----> spilledNodes antes de assign: 
Asigne a T5 el color eax
Alias de T5:T5
Asigne a T4 el color ebx
Alias de T4:T4
Asigne a T3 el color ecx
Alias de T3:T3
Asigne a T2 el color edx
Alias de T2:T2
Asigne a T1 el color edi
Alias de T1:T1
Asigne a T0 el color esi
Alias de T0:T0
METO T6 en spilledNodes
METO eax en spilledNodes
METO T18 en spilledNodes
(ALIAS) Asigne a T13 el color eax
(ALIAS) Asigne a T14 el color noColor
(ALIAS) Asigne a T15 el color noColor
(ALIAS) Asigne a T16 el color noColor
(ALIAS) Asigne a T17 el color noColor
(ALIAS) Asigne a T19 el color esi
----> spilledNodes despues de assign: 
7(T18)
13(T6)
14(eax)
REESCRITURA
----> spilledNodes en rewrite: 
7(T18)
13(T6)
14(eax)
TEMPORALES NUEVOS SPILLEADOS: 
TEMPORALES NUEVOS CREADOS: T20, T21, T22, T23, T24, T25, 
Tabla de colores:
eax: eax
ebx: ebx
ecx: ecx
edi: edi
T13: eax
T14: noColor
T15: noColor
T16: noColor
T17: noColor
T19: esi
edx: edx
esi: esi
T0: esi
T1: edi
T2: edx
T3: ecx
T4: ebx
T5: eax


Codigo despues del coloreo:
_tigermain: .ascii 
_tigermain:

	enter $666,$0x0

	movl %esi,$1

	movl %edi,$2

	movl %edx,$3

	movl %ecx,$4

	movl %ebx,$5

	movl %eax,$6

	movl %T20,$7

	movl 20(%ebp), %T20
	movlE1 %esi,%esi

	addl %esi,%edi

	movlE1 %T21,%esi

	movl 16(%ebp), %T21
	addl %T22,%edx

	movl 16(%ebp), %T22
	movl %T23, 16(%ebp)
	movlE1 %noColor,%T23

	addl %noColor,%ecx

	movlE1 %noColor,%noColor

	addl %noColor,%ebx

	movlE1 %noColor,%noColor

	addl %noColor,%eax

	movlE1 %noColor,%noColor

	movl %T24, 20(%ebp)
	addl %noColor,%T24

	movl %eax,%noColor

	movl %T25,%eax

	movl 24(%ebp), %T25
	jmp L0

L0:

	leave

	ret

yes!!

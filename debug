alloc Var arrrMEM BINOP (PLUS, TEMP ebp,CONST ~4)CONST 0
alloc Var arrrMEM BINOP (PLUS, TEMP ebp,CONST ~4)CONST 0
IF EXP!!!
IF EXP!!!
Subscript Var arrrMEM BINOP (PLUS, MEM BINOP (PLUS, TEMP ebp,CONST 8),CONST ~8)TEMP T36
Subscript Var arrrMEM BINOP (PLUS, MEM BINOP (PLUS, TEMP ebp,CONST 8),CONST ~8)TEMP T36
Subscript Var arrrMEM BINOP (PLUS, MEM BINOP (PLUS, TEMP ebp,CONST 8),CONST ~8)CONST 1
Subscript Var arrrMEM BINOP (PLUS, MEM BINOP (PLUS, TEMP ebp,CONST 8),CONST ~8)TEMP T36
IF EXP!!!
bien!
Fragmentos de string: 22: (_tigermain, ), (try_L0, ), (L39, "ACA VA EL TABLERO\x0a"), (L38, "ACA VA EL TABLERO\x0a"), (L35, "\x0a"), (L34, "\x0a"), (L31, "."), (L30, "."), (printint_L1, ), (L22, "0"), (L21, "0"), (L18, "-"), (L17, "-"), (f_L2, ), (L12, "0"), (L11, "0"), (L10, "0"), (L9, "0"), (L8, "0"), (L7, "0"), (L6, "0"), (L5, "0"), 
L5:	"0"
L6:	"0"
L7:	"0"
L8:	"0"
L9:	"0"
L10:	"0"
L11:	"0"
L12:	"0"
f_L2:
SEQ(
 CJUMP(GT,
  MEM(
   BINOP(PLUS,
    TEMP ebp,
    CONST 12)),
  CONST 0,
  L13,L14),
 SEQ(
  LABEL L13,
  SEQ(
   SEQ(
    SEQ(
     MOVE(
      TEMP T3,
      BINOP(DIV,
       MEM(
        BINOP(PLUS,
         TEMP ebp,
         CONST 12)),
       CONST 10)),
     EXP(
      CALL(
       NAME f_L2,
        MEM(
         BINOP(PLUS,
          TEMP ebp,
          CONST 8)),
        TEMP T3))),
    SEQ(
     MOVE(
      TEMP T28,
      ESEQ(
       SEQ(
        MOVE(
         TEMP T26,
         BINOP(PLUS,
          BINOP(MINUS,
           MEM(
            BINOP(PLUS,
             TEMP ebp,
             CONST 12)),
           BINOP(MUL,
            BINOP(DIV,
             MEM(
              BINOP(PLUS,
               TEMP ebp,
               CONST 12)),
             CONST 10),
            CONST 10)),
          ESEQ(
           SEQ(
            EXP(
             CALL(
              NAME ord,
               NAME L12)),
            MOVE(
             TEMP T24,
             TEMP eax)),
           TEMP T24))),
        SEQ(
         EXP(
          CALL(
           NAME chr,
            TEMP T26)),
         MOVE(
          TEMP T27,
          TEMP eax))),
       TEMP T27)),
     EXP(
      CALL(
       NAME print,
        TEMP T28)))),
   LABEL L14)))
L17:	"-"
L18:	"-"
L21:	"0"
L22:	"0"
printint_L1:
EXP(
 ESEQ(
  SEQ(
   CJUMP(LT,
    MEM(
     BINOP(PLUS,
      TEMP ebp,
      CONST 12)),
    CONST 0,
    L26,L27),
   SEQ(
    LABEL L26,
    SEQ(
     SEQ(
      EXP(
       CALL(
        NAME print,
         NAME L18)),
      SEQ(
       MOVE(
        TEMP T31,
        BINOP(MINUS,
         CONST 0,
         MEM(
          BINOP(PLUS,
           TEMP ebp,
           CONST 12)))),
       EXP(
        CALL(
         NAME f_L2,
          TEMP ebp,
          TEMP T31)))),
     SEQ(
      JUMP(       NAME L28),
      SEQ(
       LABEL L27,
       SEQ(
        SEQ(
         CJUMP(GT,
          MEM(
           BINOP(PLUS,
            TEMP ebp,
            CONST 12)),
          CONST 0,
          L23,L24),
         SEQ(
          LABEL L23,
          SEQ(
           SEQ(
            MOVE(
             TEMP T32,
             MEM(
              BINOP(PLUS,
               TEMP ebp,
               CONST 12))),
            EXP(
             CALL(
              NAME f_L2,
               TEMP ebp,
               TEMP T32))),
           SEQ(
            JUMP(             NAME L25),
            SEQ(
             LABEL L24,
             SEQ(
              EXP(
               CALL(
                NAME print,
                 NAME L22)),
              LABEL L25)))))),
        LABEL L28)))))),
  CONST 0))
L30:	"."
L31:	"."
L34:	"\x0a"
L35:	"\x0a"
L38:	"ACA VA EL TABLERO\x0a"
L39:	"ACA VA EL TABLERO\x0a"
try_L0:
SEQ(
 SEQ(
  MOVE(
   TEMP T33,
   CONST 0),
  SEQ(
   MOVE(
    TEMP T34,
    MEM(
     BINOP(PLUS,
      TEMP ebp,
      CONST 12))),
   SEQ(
    CJUMP(GT,
     TEMP T34,
     TEMP T33,
     L29,L33),
    SEQ(
     LABEL L33,
     SEQ(
      EXP(
       CALL(
        NAME print,
         NAME L31)),
      SEQ(
       CJUMP(EQ,
        TEMP T33,
        TEMP T34,
        L29,L32),
       SEQ(
        LABEL L32,
        SEQ(
         MOVE(
          TEMP T33,
          BINOP(PLUS,
           TEMP T33,
           CONST 1)),
         SEQ(
          JUMP(           NAME L33),
          LABEL L29))))))))),
 SEQ(
  EXP(
   CALL(
    NAME print,
     NAME L35)),
  SEQ(
   EXP(
    CALL(
     NAME flush)),
   SEQ(
    CJUMP(EQ,
     MEM(
      BINOP(PLUS,
       TEMP ebp,
       CONST 12)),
     MEM(
      BINOP(PLUS,
       MEM(
        BINOP(PLUS,
         TEMP ebp,
         CONST 8)),
       CONST ~4)),
     L47,L48),
    SEQ(
     LABEL L47,
     SEQ(
      EXP(
       CALL(
        NAME print,
         NAME L39)),
      SEQ(
       JUMP(        NAME L49),
       SEQ(
        LABEL L48,
        SEQ(
         SEQ(
          MOVE(
           TEMP T36,
           CONST 0),
          SEQ(
           MOVE(
            TEMP T48,
            BINOP(MINUS,
             MEM(
              BINOP(PLUS,
               MEM(
                BINOP(PLUS,
                 TEMP ebp,
                 CONST 8)),
               CONST ~4)),
             CONST 1)),
           SEQ(
            CJUMP(GT,
             TEMP T48,
             TEMP T36,
             L40,L46),
            SEQ(
             LABEL L46,
             SEQ(
              SEQ(
               CJUMP(EQ,
                ESEQ(
                 SEQ(
                  MOVE(
                   TEMP T37,
                   MEM(
                    BINOP(PLUS,
                     MEM(
                      BINOP(PLUS,
                       TEMP ebp,
                       CONST 8)),
                     CONST ~8))),
                  SEQ(
                   MOVE(
                    TEMP T38,
                    TEMP T36),
                   EXP(
                    CALL(
                     NAME _checkIndexArray,
                      TEMP T37,
                      TEMP T38)))),
                 MEM(
                  BINOP(PLUS,
                   TEMP T37,
                   BINOP(MUL,
                    TEMP T38,
                    CONST 4)))),
                CONST 0,
                L43,L44),
               SEQ(
                LABEL L43,
                SEQ(
                 SEQ(
                  MOVE(
                   ESEQ(
                    SEQ(
                     MOVE(
                      TEMP T39,
                      MEM(
                       BINOP(PLUS,
                        MEM(
                         BINOP(PLUS,
                          TEMP ebp,
                          CONST 8)),
                        CONST ~8))),
                     SEQ(
                      MOVE(
                       TEMP T40,
                       TEMP T36),
                      EXP(
                       CALL(
                        NAME _checkIndexArray,
                         TEMP T39,
                         TEMP T40)))),
                    MEM(
                     BINOP(PLUS,
                      TEMP T39,
                      BINOP(MUL,
                       TEMP T40,
                       CONST 4)))),
                   CONST 1),
                  SEQ(
                   MOVE(
                    ESEQ(
                     SEQ(
                      MOVE(
                       TEMP T41,
                       MEM(
                        BINOP(PLUS,
                         MEM(
                          BINOP(PLUS,
                           TEMP ebp,
                           CONST 8)),
                         CONST ~8))),
                      SEQ(
                       MOVE(
                        TEMP T42,
                        CONST 1),
                       EXP(
                        CALL(
                         NAME _checkIndexArray,
                          TEMP T41,
                          TEMP T42)))),
                     MEM(
                      BINOP(PLUS,
                       TEMP T41,
                       BINOP(MUL,
                        TEMP T42,
                        CONST 4)))),
                    CONST 10),
                   SEQ(
                    SEQ(
                     MOVE(
                      TEMP T45,
                      BINOP(PLUS,
                       MEM(
                        BINOP(PLUS,
                         TEMP ebp,
                         CONST 12)),
                       CONST 1)),
                     EXP(
                      CALL(
                       NAME try_L0,
                        MEM(
                         BINOP(PLUS,
                          TEMP ebp,
                          CONST 8)),
                        TEMP T45))),
                    MOVE(
                     ESEQ(
                      SEQ(
                       MOVE(
                        TEMP T46,
                        MEM(
                         BINOP(PLUS,
                          MEM(
                           BINOP(PLUS,
                            TEMP ebp,
                            CONST 8)),
                          CONST ~8))),
                       SEQ(
                        MOVE(
                         TEMP T47,
                         TEMP T36),
                        EXP(
                         CALL(
                          NAME _checkIndexArray,
                           TEMP T46,
                           TEMP T47)))),
                      MEM(
                       BINOP(PLUS,
                        TEMP T46,
                        BINOP(MUL,
                         TEMP T47,
                         CONST 4)))),
                     CONST 0)))),
                 LABEL L44))),
              SEQ(
               CJUMP(EQ,
                TEMP T36,
                TEMP T48,
                L40,L45),
               SEQ(
                LABEL L45,
                SEQ(
                 MOVE(
                  TEMP T36,
                  BINOP(PLUS,
                   TEMP T36,
                   CONST 1)),
                 SEQ(
                  JUMP(                   NAME L46),
                  LABEL L40))))))))),
         LABEL L49)))))))))
_tigermain:
MOVE(
 TEMP eax,
 ESEQ(
  SEQ(
   MOVE(
    MEM(
     BINOP(PLUS,
      TEMP ebp,
      CONST ~4)),
    CONST 8),
   SEQ(
    MOVE(
     MEM(
      BINOP(PLUS,
       TEMP ebp,
       CONST ~8)),
     CALL(
      NAME _allocArray,
       MEM(
        BINOP(PLUS,
         TEMP ebp,
         CONST ~4)),
       CONST 0)),
    MOVE(
     TEMP T0,
     CALL(
      NAME _allocArray,
       MEM(
        BINOP(PLUS,
         TEMP ebp,
         CONST ~4)),
       CONST 0)))),
  ESEQ(
   EXP(
    CALL(
     NAME try_L0,
      TEMP ebp,
      CONST 0)),
   CONST 0)))

Tabla de colores:
T49: edi
T52: eax
T53: edi
T54: eax
eax: eax
T55: edi
T56: edi
T57: ebx
T58: esi
T59: eax
T60: edi
ebx: ebx
ecx: ecx
edi: edi
edx: edx
T24: eax
esi: esi
T26: edi
T27: eax
T28: eax
T3: edi
Tabla de colores:
eax: eax
T61: eax
T62: eax
T63: eax
T64: ebx
ebx: ebx
T65: eax
ecx: ecx
edi: edi
edx: edx
esi: esi
T31: eax
T32: eax
Tabla de colores:
T40: esi
T41: ebx
T42: edi
T45: eax
T46: ebx
T47: esi
T48: edi
eax: eax
ebx: ebx
T66: ebx
T67: edi
T68: ebx
T69: eax
T70: eax
T71: edi
T72: edi
T73: eax
T74: ebx
ecx: ecx
T75: eax
T76: eax
T77: ebx
edi: edi
T79: esi
T80: ebx
T81: eax
T82: ebx
T84: ebx
edx: edx
T85: eax
T86: ebx
T88: eax
T89: eax
esi: esi
T90: ebx
T91: eax
T92: ebx
T98: eax
T99: eax
T33: edi
T34: ebx
T36: esi
T37: ebx
T100: eax
T38: esi
T101: eax
T39: ebx
T102: eax
T103: eax
T104: eax
T105: eax
Tabla de colores:
T50: edi
T51: ebx
eax: eax
ebx: ebx
ecx: ecx
edi: edi
edx: edx
esi: esi
T94: eax
T95: ebx
T0: ebx


Codigo despues del coloreo:
.data
L5:
	.long 1
	.string "0"

L6:
	.long 1
	.string "0"

L7:
	.long 1
	.string "0"

L8:
	.long 1
	.string "0"

L9:
	.long 1
	.string "0"

L10:
	.long 1
	.string "0"

L11:
	.long 1
	.string "0"

L12:
	.long 1
	.string "0"

L17:
	.long 1
	.string "-"

L18:
	.long 1
	.string "-"

L21:
	.long 1
	.string "0"

L22:
	.long 1
	.string "0"

L30:
	.long 1
	.string "."

L31:
	.long 1
	.string "."

L34:
	.long 4
	.string "\x0a"

L35:
	.long 4
	.string "\x0a"

L38:
	.long 21
	.string "ACA VA EL TABLERO\x0a"

L39:
	.long 21
	.string "ACA VA EL TABLERO\x0a"

.text
	.globl _tigermain
f_L2:

	enter $0,$0x0

	pushl %ebx

	pushl %edi

	pushl %esi

	movl 12(%ebp), %eax

	cmpl $0, %eax

	jg L13

L14:

	jmp L50

L13:

	movl 12(%ebp), %eax

	movl $10, %edi

	xorl %edx, %edx

	idivl %edi

	movl %eax,%edi

	pushl %ecx

	pushl %edx

	pushl %edi

	pushl 8(%ebp)

	call f_L2

	addl $8, %esp

	popl %edx

	popl %ecx

	movl 12(%ebp), %edi

	movl 12(%ebp), %eax

	movl $10, %esi

	xorl %edx, %edx

	idivl %esi

	movl %eax,%esi

	imul $10, %esi, %ebx

	subl %ebx,%edi

	pushl %ecx

	pushl %edx

	pushl $L12

	call ord

	addl $4, %esp

	popl %edx

	popl %ecx

	addl %eax,%edi

	pushl %ecx

	pushl %edx

	pushl %edi

	call chr

	addl $4, %esp

	popl %edx

	popl %ecx

	pushl %ecx

	pushl %edx

	pushl %eax

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

	jmp L14

L50:

	popl %esi

	popl %edi

	popl %ebx

	leave

	ret

printint_L1:

	enter $0,$0x0

	pushl %ebx

	pushl %edi

	pushl %esi

	movl 12(%ebp), %eax

	cmpl $0, %eax

	jl L26

L27:

	movl 12(%ebp), %eax

	cmpl $0, %eax

	jg L23

L24:

	pushl %ecx

	pushl %edx

	pushl $L22

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

L25:

L28:

	jmp L51

L26:

	pushl %ecx

	pushl %edx

	pushl $L18

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

	movl $0, %eax

	movl 12(%ebp), %ebx

	subl %ebx,%eax

	pushl %ecx

	pushl %edx

	pushl %eax

	pushl %ebp

	call f_L2

	addl $8, %esp

	popl %edx

	popl %ecx

	jmp L28

L23:

	movl 12(%ebp), %eax

	pushl %ecx

	pushl %edx

	pushl %eax

	pushl %ebp

	call f_L2

	addl $8, %esp

	popl %edx

	popl %ecx

	jmp L25

L51:

	popl %esi

	popl %edi

	popl %ebx

	leave

	ret

try_L0:

	enter $16,$0x0

	pushl %ebx

	pushl %edi

	pushl %esi

	movl $0, %edi 

	movl 12(%ebp), %ebx

	cmpl %ebx,%edi

	jg L29

L33:

	pushl %ecx

	pushl %edx

	pushl $L31

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

	cmpl %edi,%ebx

	je L29

L32:

	addl $1, %edi

	jmp L33

L29:

	pushl %ecx

	pushl %edx

	pushl $L35

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

	pushl %ecx

	pushl %edx

	call flush

	popl %edx

	popl %ecx

	movl 12(%ebp), %ebx

	movl 8(%ebp), %eax

	movl -4(%eax), %eax

	cmpl %ebx,%eax

	je L47

L48:

	movl $0, %esi 

	movl 8(%ebp), %eax

	movl -4(%eax), %edi

	subl $1,%edi

	cmpl %edi,%esi

	jg L40

L46:

	movl 8(%ebp), %eax

	movl -8(%eax), %ebx

	pushl %ecx

	pushl %edx

	pushl %esi

	pushl %ebx

	call _checkIndexArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl -4(%ebp), %eax

	imul $4, %esi, %eax

	movl %eax, -4(%ebp)

	movl -4(%ebp), %eax

	addl %eax,%ebx

	movl (%ebx), %eax

	cmpl $0, %eax

	je L43

L44:

	cmpl %esi,%edi

	je L40

L45:

	addl $1, %esi

	jmp L46

L47:

	pushl %ecx

	pushl %edx

	pushl $L39

	call print

	addl $4, %esp

	popl %edx

	popl %ecx

L49:

	jmp L52

L43:

	movl 8(%ebp), %eax

	movl -8(%eax), %ebx

	pushl %ecx

	pushl %edx

	pushl %esi

	pushl %ebx

	call _checkIndexArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl -8(%ebp), %eax

	imul $4, %esi, %eax

	movl %eax, -8(%ebp)

	movl -8(%ebp), %eax

	addl %eax,%ebx

	movl $1, (%ebx)

	movl 8(%ebp), %eax

	movl -8(%eax), %ebx

	movl $1, %edi 

	pushl %ecx

	pushl %edx

	pushl %edi

	pushl %ebx

	call _checkIndexArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl -12(%ebp), %eax

	imul $4, %edi, %eax

	movl %eax, -12(%ebp)

	movl -12(%ebp), %eax

	addl %eax,%ebx

	movl $10, (%ebx)

	movl 12(%ebp), %eax

	addl $1, %eax

	pushl %ecx

	pushl %edx

	pushl %eax

	pushl 8(%ebp)

	call try_L0

	addl $8, %esp

	popl %edx

	popl %ecx

	movl 8(%ebp), %eax

	movl -8(%eax), %ebx

	pushl %ecx

	pushl %edx

	pushl %esi

	pushl %ebx

	call _checkIndexArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl -16(%ebp), %eax

	imul $4, %esi, %eax

	movl %eax, -16(%ebp)

	movl -16(%ebp), %eax

	addl %eax,%ebx

	movl $0, (%ebx)

	jmp L44

L40:

	jmp L49

L52:

	popl %esi

	popl %edi

	popl %ebx

	leave

	ret

_tigermain:

	enter $8,$0x0

	pushl %ebx

	pushl %edi

	pushl %esi

	movl %ebp,%eax

	addl $-4, %eax

	movl $8, (%eax)

	movl %ebp,%ebx

	addl $-8, %ebx

	pushl %ecx

	pushl %edx

	pushl $0

	pushl -4(%ebp)

	call _allocArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl %eax, %edi

	movl %edi, (%ebx)

	pushl %ecx

	pushl %edx

	pushl $0

	pushl -4(%ebp)

	call _allocArray

	addl $8, %esp

	popl %edx

	popl %ecx

	movl %eax, %ebx

	pushl %ecx

	pushl %edx

	pushl $0

	pushl %ebp

	call try_L0

	addl $8, %esp

	popl %edx

	popl %ecx

	movl $0, %eax 

	jmp L53

L53:

	popl %esi

	popl %edi

	popl %ebx

	leave

	ret

yes!!

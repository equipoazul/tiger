bien!
FLOWGRAPH: 
[23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, ]
[<22, 23><21, 22><20, 21><19, 20><18, 19><17, 18><16, 17><15, 16><14, 15><13, 14><12, 13><11, 12><10, 11><9, 10><8, 9><7, 8><6, 7><5, 6><4, 5><3, 4><2, 3><1, 2><0, 1>]
Use:
8 -> T0 
9 -> T1 
10 -> T19 
11 -> T2 
12 -> T18 
13 -> T3 
14 -> T17 
15 -> T4 
16 -> T16 
17 -> T5 
18 -> T15 
19 -> T6 
20 -> T14 
21 -> T13 
Def:
1 -> T0 
2 -> T1 
3 -> T2 
4 -> T3 
5 -> T4 
6 -> T5 
7 -> T6 
8 -> T19 
9 -> T19 
10 -> T18 
11 -> T18 
12 -> T17 
13 -> T17 
14 -> T16 
15 -> T16 
16 -> T15 
17 -> T15 
18 -> T14 
19 -> T14 
20 -> T13 
21 -> eax 
LIVE QUE VIENE POR ARRASTRE
LIVE DEL NODO 23
LIVE DEL NODO 22
LIVE DEL NODO 21
T13
LIVE DEL NODO 20
T14
LIVE DEL NODO 19
T6
LIVE DEL NODO 18
T15
T6
LIVE DEL NODO 17
T5
T6
LIVE DEL NODO 16
T16
T5
T6
LIVE DEL NODO 15
T4
T5
T6
LIVE DEL NODO 14
T17
T4
T5
T6
LIVE DEL NODO 13
T3
T4
T5
T6
LIVE DEL NODO 12
T18
T3
T4
T5
T6
LIVE DEL NODO 11
T2
T3
T4
T5
T6
LIVE DEL NODO 10
T19
T2
T3
T4
T5
T6
LIVE DEL NODO 9
T1
T2
T3
T4
T5
T6
LIVE DEL NODO 8
T0
T1
T2
T3
T4
T5
T6
LIVE DEL NODO 7
T0
T1
T2
T3
T4
T5
LIVE DEL NODO 6
T0
T1
T2
T3
T4
LIVE DEL NODO 5
T0
T1
T2
T3
LIVE DEL NODO 4
T0
T1
T2
LIVE DEL NODO 3
T0
T1
LIVE DEL NODO 2
T0
LIVE DEL NODO 1
LIVE DEL NODO 0
=========================================
spillWorkList: 
0(T0)
1(T1)
8(T19)
9(T2)
10(T3)
11(T4)
12(T5)
13(T6)
freezeWorkList: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
7(T18)
simplifyWorkList: 
coalescedNodes: 
coloredNodes: 
spilledNodes: 
worklistMoves: 
(T0, T19)
(T13, eax)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
(T19, T18)
activeMoves: 
coalescedMoves: 
frozenMoves: 
constrainedMoves: 
Degrees: 20
19 (esi) -> 0
18 (edx) -> 0
17 (edi) -> 0
16 (ecx) -> 0
15 (ebx) -> 0
14 (eax) -> 0
13 (T6) -> 12
12 (T5) -> 11
11 (T4) -> 10
10 (T3) -> 9
9 (T2) -> 8
8 (T19) -> 6
7 (T18) -> 5
6 (T17) -> 4
5 (T16) -> 3
4 (T15) -> 2
3 (T14) -> 1
2 (T13) -> 0
1 (T1) -> 7
0 (T0) -> 6
Termine 

CODIGO: 
0	LABEL {assem = _tigermain:
 lab = _tigermain}
1	OPER {assem = movl `d0,$1
 dst = T0 , src = , _ jump = _}
2	OPER {assem = movl `d0,$2
 dst = T1 , src = , _ jump = _}
3	OPER {assem = movl `d0,$3
 dst = T2 , src = , _ jump = _}
4	OPER {assem = movl `d0,$4
 dst = T3 , src = , _ jump = _}
5	OPER {assem = movl `d0,$5
 dst = T4 , src = , _ jump = _}
6	OPER {assem = movl `d0,$6
 dst = T5 , src = , _ jump = _}
7	OPER {assem = movl `d0,$7
 dst = T6 , src = , _ jump = _}
8	MOVE {assem = movlE1 `d0,`s0
, dst =T19, src =T0}
9	OPER {assem = addl `d0,`s0
 dst = T19 , src = T1 , _ jump = _}
10	MOVE {assem = movlE1 `d0,`s0
, dst =T18, src =T19}
11	OPER {assem = addl `d0,`s0
 dst = T18 , src = T2 , _ jump = _}
12	MOVE {assem = movlE1 `d0,`s0
, dst =T17, src =T18}
13	OPER {assem = addl `d0,`s0
 dst = T17 , src = T3 , _ jump = _}
14	MOVE {assem = movlE1 `d0,`s0
, dst =T16, src =T17}
15	OPER {assem = addl `d0,`s0
 dst = T16 , src = T4 , _ jump = _}
16	MOVE {assem = movlE1 `d0,`s0
, dst =T15, src =T16}
17	OPER {assem = addl `d0,`s0
 dst = T15 , src = T5 , _ jump = _}
18	MOVE {assem = movlE1 `d0,`s0
, dst =T14, src =T15}
19	OPER {assem = addl `d0,`s0
 dst = T14 , src = T6 , _ jump = _}
20	MOVE {assem = movl `d0,`s0
, dst =T13, src =T14}
21	MOVE {assem = movl `d0,`s0
, dst =eax, src =T13}
22	OPER {assem = jmp L0
 dst = , src = , _ jump = _}
23	LABEL {assem = L0:
 lab = L0}

=========================================
METO (T13, eax) en coalescedMoves
Meto en el alias -> T13 eax
METO (T15, T14) en coalescedMoves
Meto en el alias -> T14 T15
METO (T16, T15) en coalescedMoves
Meto en el alias -> T15 T16
METO (T17, T16) en coalescedMoves
Meto en el alias -> T16 T17
METO (T18, T17) en coalescedMoves
Meto en el alias -> T17 T18
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
coalescedMoves: 
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
coalescedMoves: 
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
METO eax en simplifyWorklist (freezeMoves)
METO T18 en el stack
METO eax en el stack
PRIORITIES: (0.333333333333, T0), (0.285714285714, T1), (0.5, T19), (0.25, T2), (0.222222222222, T3), (0.2, T4), (0.181818181818, T5), (0.166666666667, T6), 
----> spilleWorkList: T0, T1, T19, T2, T3, T4, T5, T6, 
SPILLEO T6
METO T6 en el stack
METO (T0, T19) en coalescedMoves
Meto en el alias -> T19 T0
METO T1 en simplifyWorklist (decrementDegree)
METO T2 en simplifyWorklist (decrementDegree)
METO T3 en simplifyWorklist (decrementDegree)
METO T4 en simplifyWorklist (decrementDegree)
METO T5 en simplifyWorklist (decrementDegree)
METO T0 en simplifyWorklist (addWorklist)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
8(T19)
coalescedMoves: 
(T0, T19)
(T13, eax)
(T15, T14)
(T16, T15)
(T17, T16)
(T18, T17)
METO T0 en el stack
METO T1 en el stack
METO T2 en el stack
METO T3 en el stack
METO T4 en el stack
METO T5 en el stack
----> spilledNodes antes de assign: 
Asigne a T5 el color eax
Alias de T5:T5
Asigne a T4 el color ebx
Alias de T4:T4
Asigne a T3 el color ecx
Alias de T3:T3
Asigne a T2 el color edx
Alias de T2:T2
Asigne a T1 el color edi
Alias de T1:T1
Asigne a T0 el color esi
Alias de T0:T0
METO T6 en spilledNodes
METO eax en spilledNodes
METO T18 en spilledNodes
(ALIAS) Asigne a T13 el color eax
(ALIAS) Asigne a T14 el color noColor
(ALIAS) Asigne a T15 el color noColor
(ALIAS) Asigne a T16 el color noColor
(ALIAS) Asigne a T17 el color noColor
(ALIAS) Asigne a T19 el color esi
----> spilledNodes despues de assign: 
7(T18)
13(T6)
14(eax)
REESCRITURA
----> spilledNodes en rewrite: 
7(T18)
13(T6)
14(eax)
TEMPORALES NUEVOS SPILLEADOS: 
TEMPORALES NUEVOS CREADOS: T20, T21, T22, T23, T24, T25, 
FLOWGRAPH: 
[29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, ]
[<28, 29><27, 28><26, 27><25, 26><24, 25><23, 24><22, 23><21, 22><20, 21><19, 20><18, 19><17, 18><16, 17><15, 16><14, 15><13, 14><12, 13><11, 12><10, 11><9, 10><8, 9><7, 8><6, 7><5, 6><4, 5><3, 4><2, 3><1, 2><0, 1>]
Use:
8 -> T20 
9 -> T0 
10 -> T1 
11 -> T19 
12 -> T21 
13 -> T2 
14 -> T22 
16 -> T23 
17 -> T3 
18 -> T17 
19 -> T4 
20 -> T16 
21 -> T5 
22 -> T15 
24 -> T24 
25 -> T14 
26 -> T13 
27 -> T25 
Def:
1 -> T0 
2 -> T1 
3 -> T2 
4 -> T3 
5 -> T4 
6 -> T5 
7 -> T20 
9 -> T19 
10 -> T19 
11 -> T21 
13 -> T22 
15 -> T23 
16 -> T17 
17 -> T17 
18 -> T16 
19 -> T16 
20 -> T15 
21 -> T15 
22 -> T14 
23 -> T24 
24 -> T14 
25 -> T13 
26 -> T25 
LIVE QUE VIENE POR ARRASTRE
LIVE DEL NODO 29
LIVE DEL NODO 28
LIVE DEL NODO 27
T25
LIVE DEL NODO 26
T13
LIVE DEL NODO 25
T14
LIVE DEL NODO 24
T24
LIVE DEL NODO 23
LIVE DEL NODO 22
T15
LIVE DEL NODO 21
T5
LIVE DEL NODO 20
T16
T5
LIVE DEL NODO 19
T4
T5
LIVE DEL NODO 18
T17
T4
T5
LIVE DEL NODO 17
T3
T4
T5
LIVE DEL NODO 16
T23
T3
T4
T5
LIVE DEL NODO 15
T3
T4
T5
LIVE DEL NODO 14
T22
T3
T4
T5
LIVE DEL NODO 13
T2
T3
T4
T5
LIVE DEL NODO 12
T2
T21
T3
T4
T5
LIVE DEL NODO 11
T19
T2
T3
T4
T5
LIVE DEL NODO 10
T1
T2
T3
T4
T5
LIVE DEL NODO 9
T0
T1
T2
T3
T4
T5
LIVE DEL NODO 8
T0
T1
T2
T20
T3
T4
T5
LIVE DEL NODO 7
T0
T1
T2
T3
T4
T5
LIVE DEL NODO 6
T0
T1
T2
T3
T4
LIVE DEL NODO 5
T0
T1
T2
T3
LIVE DEL NODO 4
T0
T1
T2
LIVE DEL NODO 3
T0
T1
LIVE DEL NODO 2
T0
LIVE DEL NODO 1
LIVE DEL NODO 0
METO T22 en simplifyWorklist (makeWorkList)
METO T24 en simplifyWorklist (makeWorkList)
=========================================
spillWorkList: 
0(T0)
1(T1)
8(T2)
9(T20)
15(T3)
16(T4)
17(T5)
freezeWorkList: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
7(T19)
10(T21)
12(T23)
14(T25)
simplifyWorkList: 
11(T22)
13(T24)
coalescedNodes: 
coloredNodes: 
spilledNodes: 
worklistMoves: 
(T0, T19)
(T13, T25)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T19, T21)
(T23, T17)
activeMoves: 
coalescedMoves: 
frozenMoves: 
constrainedMoves: 
Degrees: 24
23 (esi) -> 0
22 (edx) -> 0
21 (edi) -> 0
20 (ecx) -> 0
19 (ebx) -> 0
18 (eax) -> 0
17 (T5) -> 13
16 (T4) -> 12
15 (T3) -> 11
14 (T25) -> 0
13 (T24) -> 0
12 (T23) -> 3
11 (T22) -> 3
10 (T21) -> 4
9 (T20) -> 6
8 (T2) -> 8
7 (T19) -> 5
6 (T17) -> 3
5 (T16) -> 2
4 (T15) -> 1
3 (T14) -> 0
2 (T13) -> 0
1 (T1) -> 7
0 (T0) -> 6
Termine 

CODIGO: 
0	LABEL {assem = _tigermain:
 lab = _tigermain}
1	OPER {assem = movl `d0,$1
 dst = T0 , src = , _ jump = _}
2	OPER {assem = movl `d0,$2
 dst = T1 , src = , _ jump = _}
3	OPER {assem = movl `d0,$3
 dst = T2 , src = , _ jump = _}
4	OPER {assem = movl `d0,$4
 dst = T3 , src = , _ jump = _}
5	OPER {assem = movl `d0,$5
 dst = T4 , src = , _ jump = _}
6	OPER {assem = movl `d0,$6
 dst = T5 , src = , _ jump = _}
7	OPER {assem = movl `d0,$7
 dst = T20 , src = , _ jump = _}
8	OPER {assem = movl 20(%ebp), `s0 dst = , src = T20 , _ jump = _}
9	MOVE {assem = movlE1 `d0,`s0
, dst =T19, src =T0}
10	OPER {assem = addl `d0,`s0
 dst = T19 , src = T1 , _ jump = _}
11	MOVE {assem = movlE1 `d0,`s0
, dst =T21, src =T19}
12	OPER {assem = movl 16(%ebp), `s0 dst = , src = T21 , _ jump = _}
13	OPER {assem = addl `d0,`s0
 dst = T22 , src = T2 , _ jump = _}
14	OPER {assem = movl 16(%ebp), `s0 dst = , src = T22 , _ jump = _}
15	OPER {assem = movl `d0, 16(%ebp) dst = T23 , src = , _ jump = _}
16	MOVE {assem = movlE1 `d0,`s0
, dst =T17, src =T23}
17	OPER {assem = addl `d0,`s0
 dst = T17 , src = T3 , _ jump = _}
18	MOVE {assem = movlE1 `d0,`s0
, dst =T16, src =T17}
19	OPER {assem = addl `d0,`s0
 dst = T16 , src = T4 , _ jump = _}
20	MOVE {assem = movlE1 `d0,`s0
, dst =T15, src =T16}
21	OPER {assem = addl `d0,`s0
 dst = T15 , src = T5 , _ jump = _}
22	MOVE {assem = movlE1 `d0,`s0
, dst =T14, src =T15}
23	OPER {assem = movl `d0, 20(%ebp) dst = T24 , src = , _ jump = _}
24	OPER {assem = addl `d0,`s0
 dst = T14 , src = T24 , _ jump = _}
25	MOVE {assem = movl `d0,`s0
, dst =T13, src =T14}
26	MOVE {assem = movl `d0,`s0
, dst =T25, src =T13}
27	OPER {assem = movl 24(%ebp), `s0 dst = , src = T25 , _ jump = _}
28	OPER {assem = jmp L0
 dst = , src = , _ jump = _}
29	LABEL {assem = L0:
 lab = L0}

=========================================
METO T22 en el stack
METO T24 en el stack
METO (T13, T25) en coalescedMoves
Meto en el alias -> T25 T13
METO (T14, T13) en coalescedMoves
Meto en el alias -> T13 T14
METO (T15, T14) en coalescedMoves
Meto en el alias -> T14 T15
METO (T16, T15) en coalescedMoves
Meto en el alias -> T15 T16
METO (T17, T16) en coalescedMoves
Meto en el alias -> T16 T17
METO (T19, T21) en coalescedMoves
Meto en el alias -> T21 T19
METO (T23, T17) en coalescedMoves
Meto en el alias -> T17 T23
METO T23 en simplifyWorklist (addWorklist)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
10(T21)
14(T25)
coalescedMoves: 
(T13, T25)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T19, T21)
(T23, T17)
METO T23 en el stack
METO T19 en el stack
PRIORITIES: (0.333333333333, T0), (0.285714285714, T1), (0.25, T2), (0.333333333333, T20), (0.181818181818, T3), (0.166666666667, T4), (0.153846153846, T5), 
----> spilleWorkList: T0, T1, T2, T20, T3, T4, T5, 
SPILLEO T5
METO T5 en el stack
METO T0 en simplifyWorklist (decrementDegree)
METO T1 en simplifyWorklist (decrementDegree)
METO T2 en simplifyWorklist (decrementDegree)
METO T20 en simplifyWorklist (decrementDegree)
METO T3 en simplifyWorklist (decrementDegree)
METO T4 en simplifyWorklist (decrementDegree)
METO T0 en el stack
METO T1 en el stack
METO T2 en el stack
METO T20 en el stack
METO T3 en el stack
METO T4 en el stack
----> spilledNodes antes de assign: 
Asigne a T4 el color eax
Alias de T4:T4
Asigne a T3 el color ebx
Alias de T3:T3
Asigne a T20 el color ecx
Alias de T20:T20
Asigne a T2 el color edx
Alias de T2:T2
Asigne a T1 el color edi
Alias de T1:T1
Asigne a T0 el color esi
Alias de T0:T0
METO T5 en spilledNodes
METO T19 en spilledNodes
METO T23 en spilledNodes
METO T24 en spilledNodes
METO T22 en spilledNodes
(ALIAS) Asigne a T13 el color noColor
(ALIAS) Asigne a T14 el color noColor
(ALIAS) Asigne a T15 el color noColor
(ALIAS) Asigne a T16 el color noColor
(ALIAS) Asigne a T17 el color noColor
(ALIAS) Asigne a T21 el color noColor
(ALIAS) Asigne a T25 el color noColor
----> spilledNodes despues de assign: 
7(T19)
11(T22)
12(T23)
13(T24)
17(T5)
REESCRITURA
----> spilledNodes en rewrite: 
7(T19)
11(T22)
12(T23)
13(T24)
17(T5)
TEMPORALES NUEVOS SPILLEADOS: 
TEMPORALES NUEVOS CREADOS: T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, 
FLOWGRAPH: 
[40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, ]
[<39, 40><38, 39><37, 38><36, 37><35, 36><34, 35><33, 34><32, 33><31, 32><30, 31><29, 30><28, 29><27, 28><26, 27><25, 26><24, 25><23, 24><22, 23><21, 22><20, 21><19, 20><18, 19><17, 18><16, 17><15, 16><14, 15><13, 14><12, 13><11, 12><10, 11><9, 10><8, 9><7, 8><6, 7><5, 6><4, 5><3, 4><2, 3><1, 2><0, 1>]
Use:
7 -> T26 
9 -> T20 
10 -> T0 
11 -> T27 
12 -> T1 
13 -> T28 
15 -> T29 
16 -> T21 
17 -> T2 
18 -> T30 
20 -> T31 
22 -> T32 
24 -> T33 
25 -> T3 
26 -> T17 
27 -> T4 
28 -> T16 
30 -> T34 
31 -> T15 
33 -> T35 
35 -> T36 
36 -> T14 
37 -> T13 
38 -> T25 
Def:
1 -> T0 
2 -> T1 
3 -> T2 
4 -> T3 
5 -> T4 
6 -> T26 
8 -> T20 
10 -> T27 
12 -> T28 
14 -> T29 
15 -> T21 
17 -> T30 
19 -> T31 
21 -> T32 
23 -> T33 
24 -> T17 
25 -> T17 
26 -> T16 
27 -> T16 
28 -> T15 
29 -> T34 
30 -> T15 
31 -> T14 
32 -> T35 
34 -> T36 
35 -> T14 
36 -> T13 
37 -> T25 
LIVE QUE VIENE POR ARRASTRE
LIVE DEL NODO 40
LIVE DEL NODO 39
LIVE DEL NODO 38
T25
LIVE DEL NODO 37
T13
LIVE DEL NODO 36
T14
LIVE DEL NODO 35
T36
LIVE DEL NODO 34
LIVE DEL NODO 33
T35
LIVE DEL NODO 32
LIVE DEL NODO 31
T15
LIVE DEL NODO 30
T34
LIVE DEL NODO 29
LIVE DEL NODO 28
T16
LIVE DEL NODO 27
T4
LIVE DEL NODO 26
T17
T4
LIVE DEL NODO 25
T3
T4
LIVE DEL NODO 24
T3
T33
T4
LIVE DEL NODO 23
T3
T4
LIVE DEL NODO 22
T3
T32
T4
LIVE DEL NODO 21
T3
T4
LIVE DEL NODO 20
T3
T31
T4
LIVE DEL NODO 19
T3
T4
LIVE DEL NODO 18
T3
T30
T4
LIVE DEL NODO 17
T2
T3
T4
LIVE DEL NODO 16
T2
T21
T3
T4
LIVE DEL NODO 15
T2
T29
T3
T4
LIVE DEL NODO 14
T2
T3
T4
LIVE DEL NODO 13
T2
T28
T3
T4
LIVE DEL NODO 12
T1
T2
T3
T4
LIVE DEL NODO 11
T1
T2
T27
T3
T4
LIVE DEL NODO 10
T0
T1
T2
T3
T4
LIVE DEL NODO 9
T0
T1
T2
T20
T3
T4
LIVE DEL NODO 8
T0
T1
T2
T3
T4
LIVE DEL NODO 7
T0
T1
T2
T26
T3
T4
LIVE DEL NODO 6
T0
T1
T2
T3
T4
LIVE DEL NODO 5
T0
T1
T2
T3
LIVE DEL NODO 4
T0
T1
T2
LIVE DEL NODO 3
T0
T1
LIVE DEL NODO 2
T0
LIVE DEL NODO 1
LIVE DEL NODO 0
METO T20 en simplifyWorklist (makeWorkList)
METO T26 en simplifyWorklist (makeWorkList)
METO T28 en simplifyWorklist (makeWorkList)
METO T30 en simplifyWorklist (makeWorkList)
METO T31 en simplifyWorklist (makeWorkList)
METO T32 en simplifyWorklist (makeWorkList)
METO T34 en simplifyWorklist (makeWorkList)
METO T35 en simplifyWorklist (makeWorkList)
METO T36 en simplifyWorklist (makeWorkList)
=========================================
spillWorkList: 
0(T0)
1(T1)
7(T2)
15(T3)
23(T4)
freezeWorkList: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
9(T21)
10(T25)
12(T27)
14(T29)
19(T33)
simplifyWorkList: 
8(T20)
11(T26)
13(T28)
16(T30)
17(T31)
18(T32)
20(T34)
21(T35)
22(T36)
coalescedNodes: 
coloredNodes: 
spilledNodes: 
worklistMoves: 
(T0, T27)
(T13, T25)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T29, T21)
(T33, T17)
activeMoves: 
coalescedMoves: 
frozenMoves: 
constrainedMoves: 
Degrees: 30
29 (esi) -> 0
28 (edx) -> 0
27 (edi) -> 0
26 (ecx) -> 0
25 (ebx) -> 0
24 (eax) -> 0
23 (T4) -> 16
22 (T36) -> 0
21 (T35) -> 0
20 (T34) -> 0
19 (T33) -> 2
18 (T32) -> 2
17 (T31) -> 2
16 (T30) -> 2
15 (T3) -> 15
14 (T29) -> 3
13 (T28) -> 3
12 (T27) -> 4
11 (T26) -> 5
10 (T25) -> 0
9 (T21) -> 3
8 (T20) -> 5
7 (T2) -> 10
6 (T17) -> 2
5 (T16) -> 1
4 (T15) -> 0
3 (T14) -> 0
2 (T13) -> 0
1 (T1) -> 7
0 (T0) -> 6
Termine 

CODIGO: 
0	LABEL {assem = _tigermain:
 lab = _tigermain}
1	OPER {assem = movl `d0,$1
 dst = T0 , src = , _ jump = _}
2	OPER {assem = movl `d0,$2
 dst = T1 , src = , _ jump = _}
3	OPER {assem = movl `d0,$3
 dst = T2 , src = , _ jump = _}
4	OPER {assem = movl `d0,$4
 dst = T3 , src = , _ jump = _}
5	OPER {assem = movl `d0,$5
 dst = T4 , src = , _ jump = _}
6	OPER {assem = movl `d0,$6
 dst = T26 , src = , _ jump = _}
7	OPER {assem = movl 44(%ebp), `s0 dst = , src = T26 , _ jump = _}
8	OPER {assem = movl `d0,$7
 dst = T20 , src = , _ jump = _}
9	OPER {assem = movl 20(%ebp), `s0 dst = , src = T20 , _ jump = _}
10	MOVE {assem = movlE1 `d0,`s0
, dst =T27, src =T0}
11	OPER {assem = movl 28(%ebp), `s0 dst = , src = T27 , _ jump = _}
12	OPER {assem = addl `d0,`s0
 dst = T28 , src = T1 , _ jump = _}
13	OPER {assem = movl 28(%ebp), `s0 dst = , src = T28 , _ jump = _}
14	OPER {assem = movl `d0, 28(%ebp) dst = T29 , src = , _ jump = _}
15	MOVE {assem = movlE1 `d0,`s0
, dst =T21, src =T29}
16	OPER {assem = movl 16(%ebp), `s0 dst = , src = T21 , _ jump = _}
17	OPER {assem = addl `d0,`s0
 dst = T30 , src = T2 , _ jump = _}
18	OPER {assem = movl 32(%ebp), `s0 dst = , src = T30 , _ jump = _}
19	OPER {assem = movl `d0, 32(%ebp) dst = T31 , src = , _ jump = _}
20	OPER {assem = movl 16(%ebp), `s0 dst = , src = T31 , _ jump = _}
21	OPER {assem = movl `d0, 16(%ebp) dst = T32 , src = , _ jump = _}
22	OPER {assem = movl 36(%ebp), `s0 dst = , src = T32 , _ jump = _}
23	OPER {assem = movl `d0, 36(%ebp) dst = T33 , src = , _ jump = _}
24	MOVE {assem = movlE1 `d0,`s0
, dst =T17, src =T33}
25	OPER {assem = addl `d0,`s0
 dst = T17 , src = T3 , _ jump = _}
26	MOVE {assem = movlE1 `d0,`s0
, dst =T16, src =T17}
27	OPER {assem = addl `d0,`s0
 dst = T16 , src = T4 , _ jump = _}
28	MOVE {assem = movlE1 `d0,`s0
, dst =T15, src =T16}
29	OPER {assem = movl `d0, 44(%ebp) dst = T34 , src = , _ jump = _}
30	OPER {assem = addl `d0,`s0
 dst = T15 , src = T34 , _ jump = _}
31	MOVE {assem = movlE1 `d0,`s0
, dst =T14, src =T15}
32	OPER {assem = movl `d0, 20(%ebp) dst = T35 , src = , _ jump = _}
33	OPER {assem = movl 40(%ebp), `s0 dst = , src = T35 , _ jump = _}
34	OPER {assem = movl `d0, 40(%ebp) dst = T36 , src = , _ jump = _}
35	OPER {assem = addl `d0,`s0
 dst = T14 , src = T36 , _ jump = _}
36	MOVE {assem = movl `d0,`s0
, dst =T13, src =T14}
37	MOVE {assem = movl `d0,`s0
, dst =T25, src =T13}
38	OPER {assem = movl 24(%ebp), `s0 dst = , src = T25 , _ jump = _}
39	OPER {assem = jmp L0
 dst = , src = , _ jump = _}
40	LABEL {assem = L0:
 lab = L0}

=========================================
METO T20 en el stack
METO T26 en el stack
METO T1 en simplifyWorklist (decrementDegree)
METO T1 en el stack
METO T28 en el stack
METO T30 en el stack
METO T31 en el stack
METO T32 en el stack
METO T34 en el stack
METO T35 en el stack
METO T36 en el stack
METO (T0, T27) en coalescedMoves
Meto en el alias -> T27 T0
METO T2 en simplifyWorklist (decrementDegree)
METO T0 en simplifyWorklist (addWorklist)
METO (T13, T25) en coalescedMoves
Meto en el alias -> T25 T13
METO (T14, T13) en coalescedMoves
Meto en el alias -> T13 T14
METO (T15, T14) en coalescedMoves
Meto en el alias -> T14 T15
METO (T16, T15) en coalescedMoves
Meto en el alias -> T15 T16
METO (T17, T16) en coalescedMoves
Meto en el alias -> T16 T17
METO (T29, T21) en coalescedMoves
Meto en el alias -> T21 T29
METO T29 en simplifyWorklist (addWorklist)
METO (T33, T17) en coalescedMoves
Meto en el alias -> T17 T33
METO T3 en simplifyWorklist (decrementDegree)
METO T4 en simplifyWorklist (decrementDegree)
METO T33 en simplifyWorklist (addWorklist)
coalescedNodes: 
2(T13)
3(T14)
4(T15)
5(T16)
6(T17)
9(T21)
10(T25)
12(T27)
coalescedMoves: 
(T0, T27)
(T13, T25)
(T14, T13)
(T15, T14)
(T16, T15)
(T17, T16)
(T29, T21)
(T33, T17)
METO T0 en el stack
METO T2 en el stack
METO T29 en el stack
METO T3 en el stack
METO T33 en el stack
METO T4 en el stack
----> spilledNodes antes de assign: 
Asigne a T4 el color eax
Alias de T4:T4
Asigne a T33 el color ebx
Alias de T33:T33
Asigne a T3 el color ecx
Alias de T3:T3
Asigne a T29 el color edx
Alias de T29:T29
Asigne a T2 el color edi
Alias de T2:T2
Asigne a T0 el color esi
Alias de T0:T0
METO T36 en spilledNodes
METO T35 en spilledNodes
METO T34 en spilledNodes
METO T32 en spilledNodes
METO T31 en spilledNodes
METO T30 en spilledNodes
METO T28 en spilledNodes
METO T1 en spilledNodes
METO T26 en spilledNodes
METO T20 en spilledNodes
(ALIAS) Asigne a T13 el color ebx
(ALIAS) Asigne a T14 el color ebx
(ALIAS) Asigne a T15 el color ebx
(ALIAS) Asigne a T16 el color ebx
(ALIAS) Asigne a T17 el color ebx
(ALIAS) Asigne a T21 el color edx
(ALIAS) Asigne a T25 el color ebx
(ALIAS) Asigne a T27 el color esi
----> spilledNodes despues de assign: 
1(T1)
8(T20)
11(T26)
13(T28)
16(T30)
17(T31)
18(T32)
20(T34)
21(T35)
22(T36)
Tabla de colores:
eax: eax
ebx: ebx
ecx: ecx
edi: edi
T13: ebx
T14: ebx
T15: ebx
T16: ebx
T17: ebx
edx: edx
T21: edx
esi: esi
T25: ebx
T27: esi
T29: edx
T0: esi
T2: edi
T3: ecx
T4: eax
T33: ebx


Codigo despues del coloreo:
_tigermain: .ascii 
_tigermain:

	enter $666,$0x0

	movl %esi,$1

	movl %T1,$2

	movl %edi,$3

	movl %ecx,$4

	movl %eax,$5

	movl %T26,$6

	movl 44(%ebp), %T26
	movl %T20,$7

	movl 20(%ebp), %T20
	movlE1 %esi,%esi

	movl 28(%ebp), %esi
	addl %T28,%T1

	movl 28(%ebp), %T28
	movl %edx, 28(%ebp)
	movlE1 %edx,%edx

	movl 16(%ebp), %edx
	addl %T30,%edi

	movl 32(%ebp), %T30
	movl %T31, 32(%ebp)
	movl 16(%ebp), %T31
	movl %T32, 16(%ebp)
	movl 36(%ebp), %T32
	movl %ebx, 36(%ebp)
	movlE1 %ebx,%ebx

	addl %ebx,%ecx

	movlE1 %ebx,%ebx

	addl %ebx,%eax

	movlE1 %ebx,%ebx

	movl %T34, 44(%ebp)
	addl %ebx,%T34

	movlE1 %ebx,%ebx

	movl %T35, 20(%ebp)
	movl 40(%ebp), %T35
	movl %T36, 40(%ebp)
	addl %ebx,%T36

	movl %ebx,%ebx

	movl %ebx,%ebx

	movl 24(%ebp), %ebx
	jmp L0

L0:

	leave

	ret

yes!!
